README_MAC.txt for PortMidi
Roger Dannenberg
20 sep 2009

To build PortMidi for Mac OS X, you can use make, Xcode, or CMake.
These approaches are described in separate sections below.

==== USING MAKE ====

(warning: this needs to be tested and revised after introducing
CMake to PortMidi -- I'm using xcode at the moment to build. -RBD)

go back up to the portmidi
directory and type 

make -f pm_mac/Makefile.osx

(You can also copy pm_mac/Makefile.osx to Makfile in the 
portmidi directory and just type "make".)

The Makefile.osx will build all test programs and the portmidi
library. You may want to modify the Makefile.osx to remove the
PM_CHECK_ERRORS definition. For experimental software,
especially programs running from the command line, we 
recommend using PM_CHECK_ERRORS -- it will terminate your
program and print a helpful message if any PortMidi 
function returns an error code.

If you do not compile with PM_CHECK_ERRORS, you should 
check for errors yourself.

The make file will also build an OS X Universal (ppc and i386)
dynamic link library using xcode. For instructions about this
and other options, type

make -f pm_mac/Makefile.osx help

==== USING XCODE ====

(1) Open portmidi/portmidi.xcodeproj with Xcode and 
build what you need. The simplest thing is to build the
ALL_BUILD target. The default will be to build the Debug
version, but you may want to change this to Release. 

The Debug version is compiled with PM_CHECK_ERRORS, and the
Release version is not. PM_CHECK_ERRORS will print an error
message and exit your program if any error is returned from
a call into PortMidi.

CMake (currently) also creates MinSizRel and RelWithDebInfo
versions, but only because I cannot figure out how to disable
them.

You will probably want the application PmDefaults, which sets
default MIDI In and Out devices for PortMidi. You may also
want to build a Java application using PortMidi. Since I have
not figured out how to use CMake to make an OS X Java application,
use pm_mac/pm_mac.xcodeproj as follows:

(2) open pm_mac/pm_mac.xcodeproj

(3) pm_java/pmjni/portmidi_JportmidiApi.h is needed
by libpmjni.jnilib, the Java native interface library. Since
portmidi_JportmidiApi.h is included with PortMidi, you can skip
to step 4, but if you really want to rebuild everything from 
scratch, build the JPortMidiHeaders project.

(4) If you did not build libpmjni.dylib using portmidi.xcodeproj,
do it now. (It depends on portmidi_JportmidiApi.h, and the 
PmDefaults project depends on libpmjni.dylib.)

(5) Returning to pm_mac.xcodeproj, build the PmDefaults program.

(6) If you wish, copy pm_mac/build/Deployment/PmDefaults.app to
your applications folder.

==== USING CMAKE ====

(1) Install CMake if you do not have it already.

(2) Open portmedia/portmidi/CMakeLists.txt with CMake

(3) Use Configure and Generate buttons

(4) This creates portmedia/portmidi/portmidi.xcodeproj.

(5) Follow the directions above using Xcode to compile
PortMidi.

Notes: 
   (1) You will also use pm_mac/pm_mac.xcodeproj, which
is not generated by CMake.
   (2) The portmidi.xcodeproj created by CMake will have absolute
paths and depend on CMake, so it will not be very portable to other 
machines or even directories. You can cd to pm_mac and run 
clean_up_project.sh to convert pm_mac.xcodeproj to use relative 
paths and to remove the scripts that run CMake. You'll first have 
to modify pm_mac/clean_up_project.awk to contain the particular
absolute path or your portmidi project. Also, this is a pretty simple
and probably fragile hack to make a stand-alone xcode project. I
don't recommend it. Instead, either use CMake all the time, or use
the portmidi.xcodeproj you get with the distribution.


CHANGELOG

20-Sep-2009 Roger B. Dannenberg
    Modifications for using CMake
14-Sep-2009 Roger B. Dannenberg
    Modifications for using CMake
17-Jan-2007 Roger B. Dannenberg
    Explicit instructions for Xcode
15-Jan-2007 Roger B. Dannenberg
    Changed instructions because of changes to Makefile.osx
07-Oct-2006 Roger B. Dannenberg
    Added directions for xcodebuild
29-aug-2006 Roger B. Dannenberg
    Updated this documentation.
 
